1. Сделайте так, чтобы можно было использовать историю команд и автодополнение.
   Используйте для этого соответствующие функции из библиотеки readline.

2. Сделайте, чтобы вместо $? подставлялся exit code последнего запущенного процесса.

3. Сделайте так, чтобы при запуске программа загружала конфигурационный файл, в котором просто задан список команд, которые она выполняет.

4. Добавьте команды pushd, popd, dirs как в bash.

5. Сделайте так, чтобы prompt, который выводится, можно было задавать командой set prompt="...".

6. Добавьте возможность задавать алиасы. То есть пишем alias l="ls -l", и после этого вместо l везде будет подставлятся ls -l.

7. Добавьте возможность подстановки вывода команд. Например
$ l `which ls` 
-rwxr-xr-x 1 root root 109992 июл 21  2013 /bin/ls

8. Сделайте, чтобы можно было указывать log файл командой set log_file="...".
   Если log файл указан, то ошибки, которые ловятся в liftIO, будут выводиться не в stderr, а в этот файл.

9. Добавьте перенаправления ввода-вывода. Например
$ pwd > foo
$ ls < foo
Main.hs  Shell.hs

10. Доббавьте пайпы. Например
$ ls | cat
Main.hs
Shell.hs
shell_task.txt
$ ls | grep a | grep S
$ ls | grep a
Main.hs
shell_task.txt

11. Добавьте возможность запуска задач в фоне. Например, чтобы запустить сервер из 9 дз в фоне, нужно написать так: runhaskell echo_server.hs 5000 &
    Команда jobs отображает список запущенных команд. Команды bg,fg позволяют возобновить работу команды.
